"""Change from 1-based to 0-based positioning

Revision ID: 1ca6e6eac481
Revises: 5880ee6542b
Create Date: 2013-06-10 13:25:26.502090

"""

# revision identifiers, used by Alembic.
revision = '1ca6e6eac481'
down_revision = '5880ee6542b'

from alembic import op
import sqlalchemy as sa
from sqlalchemy import func
from sqlalchemy.sql import table, column


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('observation', u'position', name=u'begin', existing_type=sa.Integer(), existing_nullable=True)
    op.add_column('observation', sa.Column('end', sa.Integer(), nullable=True))

    # begin = position - 1, end = position - 1 + len(reference)

    observation = table('observation',
                        column('begin', sa.Integer()),
                        column('end', sa.Integer()),
                        column('reference', sa.String()))

    op.execute(observation.update().values({
                'begin': observation.c.begin - op.inline_literal(1),
                'end': observation.c.begin - op.inline_literal(1) + func.char_length(observation.c.reference)}))

    op.drop_column('observation', u'reference')

    region = table('region',
                   column('begin', sa.Integer()),
                   column('end', sa.Integer()))

    op.execute(region.update().values({
                'begin': region.c.begin - op.inline_literal(1)}))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('observation', u'begin', name=u'position', existing_type=sa.Integer(), existing_nullable=True)
    op.add_column('observation', sa.Column(u'reference', sa.VARCHAR(length=200), nullable=True))

    print 'Warning: back-migrating data for the observation table is not supported'
    print '(this means that any data in there is now invalid)'

    op.drop_column('observation', 'end')

    region = table('region',
                   column('begin', sa.Integer()),
                   column('end', sa.Integer()))

    op.execute(region.update().values({
                'begin': region.c.begin + op.inline_literal(1)}))
    ### end Alembic commands ###
